{"ast":null,"code":"import firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDfK_gRqMrsM6AW1urI9XenWz4b3UfZBS8\",\n  authDomain: \"kynect-job-search-cf702.firebaseapp.com\",\n  projectId: \"kynect-job-search-cf702\",\n  storageBucket: \"kynect-job-search-cf702.appspot.com\",\n  messagingSenderId: \"836058014464\",\n  appId: \"1:836058014464:web:53b0f4e130003320a049e5\",\n  measurementId: \"G-L1RMQX84QJ\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n/** To sign up using google\n* Link for developer documentation (https://firebase.google.com/docs/auth/web/google-signin)\n*/\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: \"select_account\"\n}); //const signInWithGoogle = () =>  auth.signInWithPopup(provider);\n\nfunction signInWithGoogle(provider) {\n  // [START auth_google_signin_popup]\n  firebase.auth().signInWithPopup(provider).then(result => {\n    /** @type {firebase.auth.OAuthCredential} */\n    var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n    var token = credential.accessToken; // The signed-in user info.\n\n    var user = result.user; // ...\n  }).catch(error => {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential; // ...\n  }); // [END auth_google_signin_popup]\n}\n\nexport default signInWithGoogle;","map":{"version":3,"sources":["/Users/canyonsembera/Documents/TAMU_HACK/kynect/frontend/src/firebase.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup","then","result","credential","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAQ,oBAAR;AACA,OAAO,eAAP;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,yCAFD;AAGXC,EAAAA,SAAS,EAAE,yBAHA;AAIXC,EAAAA,aAAa,EAAE,qCAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AASAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AACA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AACP;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAACU,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAC3BC,EAAAA,KAAK,EAAE;AADoB,CAA7B,E,CAIA;;AAEA,SAASC,gBAAT,CAA0BJ,QAA1B,EAAoC;AAChC;AACAZ,EAAAA,QAAQ,CAACU,IAAT,GACGO,eADH,CACmBL,QADnB,EAEGM,IAFH,CAESC,MAAD,IAAY;AAChB;AACA,QAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB,CAFgB,CAIhB;;AACA,QAAIC,KAAK,GAAGD,UAAU,CAACE,WAAvB,CALgB,CAMhB;;AACA,QAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB,CAPgB,CAQhB;AACD,GAXH,EAWKC,KAXL,CAWYC,KAAD,IAAW;AAClB;AACA,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHkB,CAIlB;;AACA,QAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALkB,CAMlB;;AACA,QAAIV,UAAU,GAAGK,KAAK,CAACL,UAAvB,CAPkB,CAQlB;AACD,GApBH,EAFgC,CAuBhC;AACD;;AAEH,eAAeJ,gBAAf","sourcesContent":["import firebase from 'firebase/app';\nimport  \"firebase/firestore\";\nimport 'firebase/auth';\nconst config = {\n    apiKey: \"AIzaSyDfK_gRqMrsM6AW1urI9XenWz4b3UfZBS8\",\n    authDomain: \"kynect-job-search-cf702.firebaseapp.com\",\n    projectId: \"kynect-job-search-cf702\",\n    storageBucket: \"kynect-job-search-cf702.appspot.com\",\n    messagingSenderId: \"836058014464\",\n    appId: \"1:836058014464:web:53b0f4e130003320a049e5\",\n    measurementId: \"G-L1RMQX84QJ\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n/** To sign up using google\n* Link for developer documentation (https://firebase.google.com/docs/auth/web/google-signin)\n*/\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: \"select_account\",\n});\n\n//const signInWithGoogle = () =>  auth.signInWithPopup(provider);\n\nfunction signInWithGoogle(provider) {\n    // [START auth_google_signin_popup]\n    firebase.auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n  \n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        // ...\n      }).catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n    // [END auth_google_signin_popup]\n  }\n\nexport default signInWithGoogle;"]},"metadata":{},"sourceType":"module"}